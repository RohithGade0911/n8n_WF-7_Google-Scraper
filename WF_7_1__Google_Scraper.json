{
  "name": "WF-7.1: Google Scraper",
  "nodes": [
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -700,
        -220
      ],
      "id": "8e30d7a2-6020-48d8-aef8-8a84342b3094",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "parse the JSON \"query\" and output the following parameters separately:\n\njobTitle\ncompanyIndustry\nlocation",
              "role": "system"
            },
            {
              "content": "={{ JSON.stringify($json.query) }}"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -480,
        -220
      ],
      "id": "8ee7fe7d-900a-4602-9cb8-d7c135346d5e",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "Wpz92gS5tHENlMa7",
          "name": "OpenAi for N8N - 2"
        }
      }
    },
    {
      "parameters": {
        "url": "https://www.google.com/search",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "=site:linkedin.com/in/{{ $json.message.content.jobTitle }} {{ $json.message.content.companyIndustry }} {{ $json.message.content.location }} "
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -120,
        -220
      ],
      "id": "8533dbf0-d138-42ec-94b1-a5e9598fad45",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "jsCode": "// Get the HTML content from the previous HTTP Request node\nconst htmlContent = $node[\"HTTP Request\"].json.data;  // Adjust if the content is in a different field\n\n// Convert the content to a string (in case it isn't already)\nconst htmlString = String(htmlContent);\n\n// Regular expression to match LinkedIn profile URLs in href attributes\nconst regex = /https:\\/\\/www\\.linkedin\\.com\\/in\\/[a-zA-Z0-9\\-_]+/g;\n\nlet matches;\nconst linkedinUrls = [];\n\n// Extract all LinkedIn URLs found in the HTML\nwhile ((matches = regex.exec(htmlString)) !== null) {\n  linkedinUrls.push(matches[0]);  // Add the LinkedIn URL to the array\n}\n\n// Remove duplicates by converting the array to a Set and back to an array\nconst uniqueLinkedinUrls = [...new Set(linkedinUrls)];\n\n// Return the list of extracted LinkedIn URLs\nif (uniqueLinkedinUrls.length > 0) {\n  return uniqueLinkedinUrls.map(url => ({\n    json: {\n      linkedinUrl: url\n    }\n  }));\n} else {\n  return [{ json: { message: 'No LinkedIn profiles found' } }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        100,
        -220
      ],
      "id": "edfca79e-e368-4ccd-bea3-7c3f331bfdfc",
      "name": "Code"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "137PBzQhfJGgzwyhc4bk5NQoC4F4NBPQN6t8CWx0pDFY",
          "mode": "list",
          "cachedResultName": "LinkedIn Links",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/137PBzQhfJGgzwyhc4bk5NQoC4F4NBPQN6t8CWx0pDFY/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/137PBzQhfJGgzwyhc4bk5NQoC4F4NBPQN6t8CWx0pDFY/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Profile Links": "={{ $json.message }}"
          },
          "matchingColumns": [
            "Profile Links"
          ],
          "schema": [
            {
              "id": "Profile Links",
              "displayName": "Profile Links",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        320,
        -220
      ],
      "id": "8e7dfecf-1d3d-469d-9f0d-9670eca359f8",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "mcxXXq1cYc8FBdQ2",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "afd62b19-9245-4502-88fc-7169877c36a2",
              "name": "response",
              "value": "done",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        540,
        -220
      ],
      "id": "663f4695-4802-42d1-b533-78ad35022a4e",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "content": "## WF-7.1: Google Scraper",
        "height": 80,
        "width": 300
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -220,
        -400
      ],
      "typeVersion": 1,
      "id": "b6eaa07c-bb6d-434f-bf38-bc9feb06f0ae",
      "name": "Sticky Note"
    }
  ],
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "query": "jobTitle=&companyIndustry=&location=&"
        }
      }
    ]
  },
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "360505d1-58c4-4727-acaa-8f5c1344ce2d",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "2d2d70a2fb453af06e00a928d8941f9b9244bb70831be608328c9e9fa7d1bda3"
  },
  "id": "2qs5QXVRKHjfH0fj",
  "tags": []
}